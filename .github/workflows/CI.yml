name: CI

on:
    push:
    pull_request:

jobs:
    build:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                os: [ubuntu-latest]
                node-verison: [12.x]

        steps:
        -   uses: actions/checkout@v2
        -   uses: actions/setup-node@v1

        -   name: Cache node modules
            uses: actions/cache@v1
            with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-node-

        -   name: npm install, lint and build
            run: |
                npm install
                npm run build
                ./node_modules/.bin/eslint ./src
            working-directory: ./frontend

        -   name: setup JDK 1.11
            uses: actions/setup-java@v1
            with:
                java-version: 1.11

        -  name: restore key- and truststore
           working-directory: ./backend
           run: |
                echo "${{ secrets.CLIENT_KEYSTORE }}" > client.keystore.p12.asc
                gpg -d --passphrase "${{ secrets.CLIENT_KEYSTORE_KEY }}" --batch client.keystore.p12.asc > client.keystore.p12
                echo "${{ secrets.CLIENT_TRUSTSTORE }}" > client.truststore.jks.asc
                gpg -d --passphrase "${{ secrets.CLIENT_TRUSTSTORE_KEY }}" --batch client.truststore.jks.asc > client.truststore.jks

        -   name: Build with maven
            run: |
                mvn -B --no-transfer-progress package --file pom.xml
            env:
                CLIENT_TRUSTSTORE_LOCATION : client.truststore.jks
                CLIENT_TRUSTSTORE_PASSWORD : ${{ secrets.CLIENT_TRUSTSTORE_PASSWORD }}
                CLIENT_KEYSTORE_LOCATION : client.keystore.p12
                CLIENT_KEYSTORE_PASSWORD : ${{ secrets.CLIENT_KEYSTORE_PASSWORD }}
            working-directory: ./backend

    test:
        needs: build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [12.x, 14.x]

        steps:
        -   uses: actions/checkout@v2

        -   name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
                node-version: ${{ matrix.node-version }}

        -   name: npm install, and test
            run: |
                npm install
                npm test
            working-directory: ./frontend
            env:
                CI: true
